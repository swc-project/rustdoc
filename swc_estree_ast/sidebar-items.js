window.SIDEBAR_ITEMS = {"enum":["Access","Arg","ArrayExprEl","ArrowFuncExprBody","AssignmentPatternLeft","Binary","BinaryExprLeft","BinaryExprOp","Block","BlockParent","Callee","CatchClauseParam","Class","ClassBodyEl","ClassImpl","ClassMethodKind","Comment","CommentType","CommentTypeShorthand","CompletionStatement","Conditional","Declaration","DeclareExportDeclSpecifier","EnumBody","EnumMember","EnumStringBodyMember","ExportDeclaration","ExportDefaultDeclType","ExportKind","ExportSpecifierType","Expression","ExpressionWrapper","Flow","FlowBaseAnnotation","FlowDeclaration","FlowPredicate","FlowType","For","ForStmtInit","ForStmtLeft","ForXStatement","Function","FunctionParent","IdOrQualifiedId","IdOrRest","IdOrString","Immutable","ImportKind","ImportPhase","ImportSpecifierType","JSX","JSXAttrName","JSXAttrVal","JSXElementChild","JSXElementName","JSXExprContainerExpr","JSXMemberExprObject","JSXOpeningElAttr","LVal","Literal","LogicalExprOp","Loop","MemberExprProp","Method","ModuleDeclaration","ModuleExportNameType","ModuleKind","ModuleSpecifier","ObjectExprProp","ObjectKey","ObjectMember","ObjectMethodKind","ObjectPatternProp","ObjectPropVal","ObjectTypeAnnotProp","ObjectTypePropKind","OptionalMemberExprProp","Param","Pattern","PatternLike","PlaceholderExpectedNode","PlusOrMinus","Private","Property","Pureish","RecordExprProp","Scopable","SrcType","Statement","SuperTypeParams","TSBaseType","TSEntityName","TSFuncDeclTypeAnnot","TSFuncDeclTypeParams","TSImportEqualsDeclModuleRef","TSLiteralTypeLiteral","TSModuleDeclBody","TSParamPropParam","TSTupleTypeElType","TSType","TSTypeElement","TSTypePredicateParamName","TSTypeQueryExprName","TaggedTemplateExprTypeParams","TemplateLiteralExpr","Terminatorless","TupleExprEl","TypeAnnotOrNoop","TypeParamDeclOrNoop","UnaryExprOp","UnaryLike","UpdateExprOp","UserWhitespacable","VariableDeclarationKind","While"],"mod":["flavor"],"struct":["AnyTypeAnnotation","ArgumentPlaceholder","ArrayExpression","ArrayPattern","ArrayTypeAnnotation","ArrowFunctionExpression","AssignmentExpression","AssignmentPattern","AwaitExpression","BaseComment","BaseNode","BigIntLiteral","BinaryExpression","BindExpression","BlockStatement","BooleanLiteral","BooleanLiteralTypeAnnotation","BooleanTypeAnnotation","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ClassImplements","ClassMethod","ClassPrivateMethod","ClassPrivateProperty","ClassProperty","ConditionalExpression","ContinueStatement","DebuggerStatement","DecimalLiteral","DeclareClass","DeclareExportAllDeclaration","DeclareExportDeclaration","DeclareFunction","DeclareInterface","DeclareModule","DeclareModuleExports","DeclareOpaqueType","DeclareTypeAlias","DeclareVariable","DeclaredPredicate","Decorator","Directive","DirectiveLiteral","DoExpression","DoWhileStatement","EmptyStatement","EmptyTypeAnnotation","EnumBooleanBody","EnumBooleanMember","EnumDeclaration","EnumDefaultedMember","EnumNumberBody","EnumNumberMember","EnumStringBody","EnumStringMember","EnumSymbolBody","ExistsTypeAnnotation","ExportAllDeclaration","ExportDefaultDeclaration","ExportDefaultSpecifier","ExportNamedDeclaration","ExportNamespaceSpecifier","ExportSpecifier","ExpressionStatement","File","ForInStatement","ForOfStatement","ForStatement","FunctionDeclaration","FunctionExpression","FunctionTypeAnnotation","FunctionTypeParam","GenericTypeAnnotation","Identifier","IfStatement","Import","ImportAttribute","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","InferredPredicate","InterfaceDeclaration","InterfaceExtends","InterfaceTypeAnnotation","InterpreterDirective","IntersectionTypeAnnotation","JSXAttribute","JSXClosingElement","JSXClosingFragment","JSXElement","JSXEmptyExpression","JSXExpressionContainer","JSXFragment","JSXIdentifier","JSXMemberExpression","JSXNamespacedName","JSXOpeningElement","JSXOpeningFragment","JSXSpreadAttribute","JSXSpreadChild","JSXText","LabeledStatement","LineCol","Loc","LogicalExpression","MemberExpression","MetaProperty","MixedTypeAnnotation","ModuleExpression","NewExpression","Noop","NullLiteral","NullLiteralTypeAnnotation","NullableTypeAnnotation","NumberLiteral","NumberLiteralTypeAnnotation","NumberTypeAnnotation","NumericLiteral","ObjectExpression","ObjectMethod","ObjectPattern","ObjectProperty","ObjectTypeAnnotation","ObjectTypeCallProperty","ObjectTypeIndexer","ObjectTypeInternalSlot","ObjectTypeProperty","ObjectTypeSpreadProperty","OpaqueType","OptionalCallExpression","OptionalMemberExpression","ParenthesizedExpression","PipelineBareFunction","PipelinePrimaryTopicReference","PipelineTopicExpression","Placeholder","PrivateName","Program","QualifiedTypeIdentifier","RecordExpression","RegExpLiteral","RegexLiteral","RestElement","RestProperty","ReturnStatement","SequenceExpression","SpreadElement","SpreadProperty","StaticBlock","StringLiteral","StringLiteralTypeAnnotation","StringTypeAnnotation","Super","SwitchCase","SwitchStatement","SymbolTypeAnnotation","TSAnyKeyword","TSArrayType","TSAsExpression","TSBigIntKeyword","TSBooleanKeyword","TSCallSignatureDeclaration","TSConditionalType","TSConstructSignatureDeclaration","TSConstructorType","TSDeclareFunction","TSDeclareMethod","TSEnumDeclaration","TSEnumMember","TSExportAssignment","TSExpressionWithTypeArguments","TSExternalModuleReference","TSFunctionType","TSImportEqualsDeclaration","TSImportType","TSIndexSignature","TSIndexedAccessType","TSInferType","TSInterfaceBody","TSInterfaceDeclaration","TSIntersectionType","TSIntrinsicKeyword","TSLiteralType","TSMappedType","TSMethodSignature","TSModuleBlock","TSModuleDeclaration","TSNamedTupleMember","TSNamespaceExportDeclaration","TSNeverKeyword","TSNonNullExpression","TSNullKeyword","TSNumberKeyword","TSObjectKeyword","TSOptionalType","TSParameterProperty","TSParenthesizedType","TSPropertySignature","TSQualifiedName","TSRestType","TSStringKeyword","TSSymbolKeyword","TSThisType","TSTupleType","TSTypeAliasDeclaration","TSTypeAnnotation","TSTypeAssertion","TSTypeLiteral","TSTypeOperator","TSTypeParameter","TSTypeParameterDeclaration","TSTypeParameterInstantiation","TSTypePredicate","TSTypeQuery","TSTypeReference","TSUndefinedKeyword","TSUnionType","TSUnknownKeyword","TSVoidKeyword","TaggedTemplateExpression","TemplateElVal","TemplateElement","TemplateLiteral","ThisExpression","ThisTypeAnnotation","ThrowStatement","TryStatement","TupleExpression","TupleTypeAnnotation","TypeAlias","TypeAnnotation","TypeCastExpression","TypeParameter","TypeParameterDeclaration","TypeParameterInstantiation","TypeofTypeAnnotation","UnaryExpression","UnionTypeAnnotation","UpdateExpression","UsingDeclaration","V8IntrinsicIdentifier","VariableDeclaration","VariableDeclarator","Variance","VoidTypeAnnotation","WhileStatement","WithStatement","YieldExpression"]};