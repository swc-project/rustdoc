searchState.loadedDescShard("swc_css_parser", 0, "Parse a given file as <code>T</code>.\nParse a given file as <code>T</code>.\nParse a given StringInput as <code>T</code>.\nSize is same as a size of a pointer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nIf this is <code>true</code>, <strong>wrong</strong> comments starting with <code>//</code> will be …\nIf enabled, errors for css modules selectors will be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this is <code>true</code>, the legacy syntax for IE will be parsed.\nIf this is <code>true</code>, the nested selector starts with an …\nTake <strong>recovered</strong> errors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>last_pos</code>")