searchState.loadedDescShard("swc_xml_ast", 0, "AST definitions for XML.\n<code>http://www.w3.org/1999/xhtml</code>\n<code>limited-quirks</code>\n<code>http://www.w3.org/1998/Math/MathML</code>\n<code>no-quirks</code>\n<code>quirks</code>\n<code>http://www.w3.org/2000/svg</code>\n<code>http://www.w3.org/1999/xlink</code>\n<code>http://www.w3.org/XML/1998/namespace</code>\n<code>http://www.w3.org/2000/xmlns/</code>\nReturns <code>Some</code> if <code>self</code> is a reference of variant <code>CdataSection</code>…\nReturns <code>Some</code> if <code>self</code> is a reference of variant <code>Comment</code>, …\nReturns <code>Some</code> if <code>self</code> is a reference of variant <code>DocumentType</code>…\nReturns <code>Some</code> if <code>self</code> is a reference of variant <code>Element</code>, …\nReturns <code>Some</code> if <code>self</code> is a mutable reference of variant …\nReturns <code>Some</code> if <code>self</code> is a mutable reference of variant …\nReturns <code>Some</code> if <code>self</code> is a mutable reference of variant …\nReturns <code>Some</code> if <code>self</code> is a mutable reference of variant …\nReturns <code>Some</code> if <code>self</code> is a mutable reference of variant …\nReturns <code>Some</code> if <code>self</code> is a mutable reference of variant <code>Text</code>…\nReturns <code>Some</code> if <code>self</code> is a reference of variant …\nReturns <code>Some</code> if <code>self</code> is a reference of variant <code>Text</code>, and …\nReturns <code>Some</code> if <code>self</code> is of variant <code>CdataSection</code>, and <code>None</code> …\nReturns <code>Some</code> if <code>self</code> is of variant <code>Comment</code>, and <code>None</code> …\nReturns <code>Some</code> if <code>self</code> is of variant <code>DocumentType</code>, and <code>None</code> …\nReturns <code>Some</code> if <code>self</code> is of variant <code>Element</code>, and <code>None</code> …\nUnwraps the value, yielding the content of <code>CdataSection</code>.\nUnwraps the value, yielding the content of <code>Comment</code>.\nUnwraps the value, yielding the content of <code>DocumentType</code>.\nUnwraps the value, yielding the content of <code>Element</code>.\nUnwraps the value, yielding the content of …\nUnwraps the value, yielding the content of <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>self</code> is of variant <code>CdataSection</code>.\nReturns <code>true</code> if <code>self</code> is of variant <code>Comment</code>.\nReturns <code>true</code> if <code>self</code> is of variant <code>DocumentType</code>.\nReturns <code>true</code> if <code>self</code> is of variant <code>Element</code>.\nReturns <code>true</code> if <code>self</code> is of variant <code>ProcessingInstruction</code>.\nReturns <code>true</code> if <code>self</code> is of variant <code>Text</code>.\nReturns <code>Some</code> if <code>self</code> is of variant <code>ProcessingInstruction</code>, …\nReturns <code>Some</code> if <code>self</code> is of variant <code>Text</code>, and <code>None</code> …")