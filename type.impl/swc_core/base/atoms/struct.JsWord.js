(function() {var type_impls = {
"swc_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Archive-for-Atom\" class=\"impl\"><a href=\"#impl-Archive-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Archive for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"docblock\"><p>NOT A PUBLIC API</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Archived\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Archived\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Archived</a> = ArchivedString</h4></section></summary><div class='docblock'>The archived representation of this type. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Resolver\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Resolver\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Resolver</a> = StringResolver</h4></section></summary><div class='docblock'>The resolver for this type. It must contain all the additional information from serializing\nneeded to make the archived type from the normal type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method trait-impl\"><a href=\"#method.resolve\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">resolve</a>(\n    &amp;self,\n    pos: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    resolver: &lt;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a> as Archive&gt;::Resolver,\n    out: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>&lt;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a> as Archive&gt;::Archived\n)</h4></section></summary><div class='docblock'>Creates the archived version of this value at the given position and writes it to the given\noutput. <a>Read more</a></div></details></div></details>","Archive","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3Cstr%3E-for-Atom\" class=\"impl\"><a href=\"#impl-AsRef%3Cstr%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<str>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Atom\" class=\"impl\"><a href=\"#impl-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"swc_core/base/atoms/struct.JsWord.html#tymethod.new\" class=\"fn\">new</a>&lt;S&gt;(s: S) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    <a class=\"struct\" href=\"swc_core/base/atoms/hstr/struct.Atom.html\" title=\"struct swc_core::base::atoms::hstr::Atom\">Atom</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;S&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a> from a string.</p>\n</div></details><section id=\"method.to_ascii_lowercase\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"swc_core/base/atoms/struct.JsWord.html#tymethod.to_ascii_lowercase\" class=\"fn\">to_ascii_lowercase</a>(&amp;self) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section><section id=\"method.as_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"swc_core/base/atoms/struct.JsWord.html#tymethod.as_str\" class=\"fn\">as_str</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></div></details>",0,"swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckBytes%3C__C%3E-for-Atom\" class=\"impl\"><a href=\"#impl-CheckBytes%3C__C%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;__C&gt; CheckBytes&lt;__C&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    <a class=\"struct\" href=\"swc_core/base/atoms/hstr/struct.Atom.html\" title=\"struct swc_core::base::atoms::hstr::Atom\">Atom</a>: CheckBytes&lt;__C&gt;,\n    __C: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = TupleStructCheckError</h4></section></summary><div class='docblock'>The error that may result from checking the type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_bytes\" class=\"method trait-impl\"><a href=\"#method.check_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">check_bytes</a>&lt;'__bytecheck&gt;(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a><a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>,\n    context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __C</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'__bytecheck <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>, TupleStructCheckError&gt;</h4></section></summary><div class='docblock'>Checks whether the given pointer points to a valid value within the\ngiven context. <a>Read more</a></div></details></div></details>","CheckBytes<__C>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Atom\" class=\"impl\"><a href=\"#impl-Clone-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Atom\" class=\"impl\"><a href=\"#impl-Debug-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Atom\" class=\"impl\"><a href=\"#impl-Default-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Atom\" class=\"impl\"><a href=\"#impl-Deref-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Atom\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Atom\" class=\"impl\"><a href=\"#impl-Display-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EqIgnoreSpan-for-Atom\" class=\"impl\"><a href=\"#impl-EqIgnoreSpan-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"swc_core/common/trait.EqIgnoreSpan.html\" title=\"trait swc_core::common::EqIgnoreSpan\">EqIgnoreSpan</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.eq_ignore_span\" class=\"method trait-impl\"><a href=\"#method.eq_ignore_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/common/trait.EqIgnoreSpan.html#tymethod.eq_ignore_span\" class=\"fn\">eq_ignore_span</a>(&amp;self, r: &amp;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>","EqIgnoreSpan","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EsReserved-for-Atom\" class=\"impl\"><a href=\"#impl-EsReserved-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"swc_core/ecma/utils/swc_ecma_ast/trait.EsReserved.html\" title=\"trait swc_core::ecma::utils::swc_ecma_ast::EsReserved\">EsReserved</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_reserved\" class=\"method trait-impl\"><a href=\"#method.is_reserved\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/utils/swc_ecma_ast/trait.EsReserved.html#method.is_reserved\" class=\"fn\">is_reserved</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_reserved_in_strict_mode\" class=\"method trait-impl\"><a href=\"#method.is_reserved_in_strict_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/utils/swc_ecma_ast/trait.EsReserved.html#method.is_reserved_in_strict_mode\" class=\"fn\">is_reserved_in_strict_mode</a>(&amp;self, is_module: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_reserved_in_strict_bind\" class=\"method trait-impl\"><a href=\"#method.is_reserved_in_strict_bind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/utils/swc_ecma_ast/trait.EsReserved.html#method.is_reserved_in_strict_bind\" class=\"fn\">is_reserved_in_strict_bind</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_reserved_in_es3\" class=\"method trait-impl\"><a href=\"#method.is_reserved_in_es3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/utils/swc_ecma_ast/trait.EsReserved.html#method.is_reserved_in_es3\" class=\"fn\">is_reserved_in_es3</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_reserved_in_any\" class=\"method trait-impl\"><a href=\"#method.is_reserved_in_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/utils/swc_ecma_ast/trait.EsReserved.html#method.is_reserved_in_any\" class=\"fn\">is_reserved_in_any</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>","EsReserved","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FoldWith%3CV%3E-for-Atom\" class=\"impl\"><a href=\"#impl-FoldWith%3CV%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"swc_core/ecma/visit/trait.FoldWith.html\" title=\"trait swc_core::ecma::visit::FoldWith\">FoldWith</a>&lt;V&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"swc_core/ecma/visit/trait.Fold.html\" title=\"trait swc_core::ecma::visit::Fold\">Fold</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/visit/trait.FoldWith.html#tymethod.fold_with\" class=\"fn\">fold_with</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Calls a visitor method (v.fold_xxx) with self.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_children_with\" class=\"method trait-impl\"><a href=\"#method.fold_children_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/visit/trait.FoldWith.html#tymethod.fold_children_with\" class=\"fn\">fold_children_with</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Visit children nodes of self with <code>v</code></div></details></div></details>","FoldWith<V>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FoldWith%3CV%3E-for-Atom\" class=\"impl\"><a href=\"#impl-FoldWith%3CV%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; FoldWith&lt;V&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    V: Fold + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fold_with</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Calls a visitor method (v.fold_xxx) with self.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_children_with\" class=\"method trait-impl\"><a href=\"#method.fold_children_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fold_children_with</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Visit children nodes of self with <code>v</code></div></details></div></details>","FoldWith<V>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Atom\" class=\"impl\"><a href=\"#impl-From%3C%26str%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&str>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBox%3Cstr%3E%3E-for-Atom\" class=\"impl\"><a href=\"#impl-From%3CBox%3Cstr%3E%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Box<str>>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'_,+str%3E%3E-for-Atom\" class=\"impl\"><a href=\"#impl-From%3CCow%3C'_,+str%3E%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Cow<'_, str>>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIdentLike%3E-for-Atom\" class=\"impl\"><a href=\"#impl-From%3CIdentLike%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;IdentLike&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(i: IdentLike) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IdentLike>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKnownIdent%3E-for-Atom\" class=\"impl\"><a href=\"#impl-From%3CKnownIdent%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;KnownIdent&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: KnownIdent) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KnownIdent>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Atom\" class=\"impl\"><a href=\"#impl-From%3CString%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<String>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWord%3E-for-Atom\" class=\"impl\"><a href=\"#impl-From%3CWord%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Word&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(w: Word) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Word>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Atom\" class=\"impl\"><a href=\"#impl-Hash-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IdentLike-for-Atom\" class=\"impl\"><a href=\"#impl-IdentLike-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"swc_core/ecma/utils/ident/trait.IdentLike.html\" title=\"trait swc_core::ecma::utils::ident::IdentLike\">IdentLike</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_ident\" class=\"method trait-impl\"><a href=\"#method.from_ident\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/utils/ident/trait.IdentLike.html#tymethod.from_ident\" class=\"fn\">from_ident</a>(i: &amp;<a class=\"struct\" href=\"swc_core/ecma/utils/swc_ecma_ast/struct.Ident.html\" title=\"struct swc_core::ecma::utils::swc_ecma_ast::Ident\">Ident</a>) -&gt; <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h4></section><section id=\"method.to_id\" class=\"method trait-impl\"><a href=\"#method.to_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/utils/ident/trait.IdentLike.html#tymethod.to_id\" class=\"fn\">to_id</a>(&amp;self) -&gt; (<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>, <a class=\"struct\" href=\"swc_core/common/struct.SyntaxContext.html\" title=\"struct swc_core::common::SyntaxContext\">SyntaxContext</a>)</h4></section><section id=\"method.into_id\" class=\"method trait-impl\"><a href=\"#method.into_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/utils/ident/trait.IdentLike.html#tymethod.into_id\" class=\"fn\">into_id</a>(self) -&gt; (<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>, <a class=\"struct\" href=\"swc_core/common/struct.SyntaxContext.html\" title=\"struct swc_core::common::SyntaxContext\">SyntaxContext</a>)</h4></section></div></details>","IdentLike","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Atom\" class=\"impl\"><a href=\"#impl-Ord-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26str%3E-for-Atom\" class=\"impl\"><a href=\"#impl-PartialEq%3C%26str%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&str>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CArc%3Cstr%3E%3E-for-Atom\" class=\"impl\"><a href=\"#impl-PartialEq%3CArc%3Cstr%3E%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"swc_core/common/sync/struct.Lrc.html\" title=\"struct swc_core::common::sync::Lrc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"swc_core/common/sync/struct.Lrc.html\" title=\"struct swc_core::common::sync::Lrc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Arc<str>>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBox%3Cstr%3E%3E-for-Atom\" class=\"impl\"><a href=\"#impl-PartialEq%3CBox%3Cstr%3E%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Box<str>>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CCow%3C'_,+str%3E%3E-for-Atom\" class=\"impl\"><a href=\"#impl-PartialEq%3CCow%3C'_,+str%3E%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Cow<'_, str>>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRc%3Cstr%3E%3E-for-Atom\" class=\"impl\"><a href=\"#impl-PartialEq%3CRc%3Cstr%3E%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/rc/struct.Rc.html\" title=\"struct alloc::rc::Rc\">Rc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/rc/struct.Rc.html\" title=\"struct alloc::rc::Rc\">Rc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Rc<str>>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CString%3E-for-Atom\" class=\"impl\"><a href=\"#impl-PartialEq%3CString%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<String>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cstr%3E-for-Atom\" class=\"impl\"><a href=\"#impl-PartialEq%3Cstr%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<str>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Atom\" class=\"impl\"><a href=\"#impl-PartialEq-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Atom\" class=\"impl\"><a href=\"#impl-PartialOrd-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize%3CS%3E-for-Atom\" class=\"impl\"><a href=\"#impl-Serialize%3CS%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; Serialize&lt;S&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    S: Serializer + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"docblock\"><p>NOT A PUBLIC API</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize</a>(\n    &amp;self,\n    serializer: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a> as Archive&gt;::Resolver, &lt;S as Fallible&gt;::Error&gt;</h4></section></summary><div class='docblock'>Writes the dependencies for the object and returns a resolver that can create the archived\ntype.</div></details></div></details>","Serialize<S>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Atom\" class=\"impl\"><a href=\"#impl-Serialize-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitAllWith%3CV%3E-for-Atom\" class=\"impl\"><a href=\"#impl-VisitAllWith%3CV%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"swc_core/ecma/visit/trait.VisitAllWith.html\" title=\"trait swc_core::ecma::visit::VisitAllWith\">VisitAllWith</a>&lt;V&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"swc_core/ecma/visit/trait.VisitAll.html\" title=\"trait swc_core::ecma::visit::VisitAll\">VisitAll</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_all_with\" class=\"method trait-impl\"><a href=\"#method.visit_all_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/visit/trait.VisitAllWith.html#tymethod.visit_all_with\" class=\"fn\">visit_all_with</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Calls a visitor method (v.visit_xxx) with self.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_all_children_with\" class=\"method trait-impl\"><a href=\"#method.visit_all_children_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/visit/trait.VisitAllWith.html#tymethod.visit_all_children_with\" class=\"fn\">visit_all_children_with</a>(&amp;self, _visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Visit children nodes of self with <code>v</code></div></details></div></details>","VisitAllWith<V>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitAllWith%3CV%3E-for-Atom\" class=\"impl\"><a href=\"#impl-VisitAllWith%3CV%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; VisitAllWith&lt;V&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    V: VisitAll + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_all_with\" class=\"method trait-impl\"><a href=\"#method.visit_all_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_all_with</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Calls a visitor method (v.visit_xxx) with self.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_all_children_with\" class=\"method trait-impl\"><a href=\"#method.visit_all_children_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_all_children_with</a>(&amp;self, _visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Visit children nodes of self with <code>v</code></div></details></div></details>","VisitAllWith<V>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitMutWith%3CV%3E-for-Atom\" class=\"impl\"><a href=\"#impl-VisitMutWith%3CV%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"swc_core/ecma/visit/trait.VisitMutWith.html\" title=\"trait swc_core::ecma::visit::VisitMutWith\">VisitMutWith</a>&lt;V&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"swc_core/ecma/visit/trait.VisitMut.html\" title=\"trait swc_core::ecma::visit::VisitMut\">VisitMut</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_mut_with\" class=\"method trait-impl\"><a href=\"#method.visit_mut_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/visit/trait.VisitMutWith.html#tymethod.visit_mut_with\" class=\"fn\">visit_mut_with</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Calls a visitor method (v.visit_mut_xxx) with self.</div></details><section id=\"method.visit_mut_children_with\" class=\"method trait-impl\"><a href=\"#method.visit_mut_children_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/visit/trait.VisitMutWith.html#tymethod.visit_mut_children_with\" class=\"fn\">visit_mut_children_with</a>(&amp;mut self, _visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></div></details>","VisitMutWith<V>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitMutWith%3CV%3E-for-Atom\" class=\"impl\"><a href=\"#impl-VisitMutWith%3CV%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; VisitMutWith&lt;V&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    V: VisitMut + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_mut_with\" class=\"method trait-impl\"><a href=\"#method.visit_mut_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_mut_with</a>(&amp;mut self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Calls a visitor method (v.visit_mut_xxx) with self.</div></details><section id=\"method.visit_mut_children_with\" class=\"method trait-impl\"><a href=\"#method.visit_mut_children_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_mut_children_with</a>(&amp;mut self, _visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></div></details>","VisitMutWith<V>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitWith%3CV%3E-for-Atom\" class=\"impl\"><a href=\"#impl-VisitWith%3CV%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"swc_core/ecma/visit/trait.VisitWith.html\" title=\"trait swc_core::ecma::visit::VisitWith\">VisitWith</a>&lt;V&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    V: <a class=\"trait\" href=\"swc_core/ecma/visit/trait.Visit.html\" title=\"trait swc_core::ecma::visit::Visit\">Visit</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/visit/trait.VisitWith.html#tymethod.visit_with\" class=\"fn\">visit_with</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Calls a visitor method (v.visit_xxx) with self.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_children_with\" class=\"method trait-impl\"><a href=\"#method.visit_children_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_core/ecma/visit/trait.VisitWith.html#tymethod.visit_children_with\" class=\"fn\">visit_children_with</a>(&amp;self, _visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Visit children nodes of self with <code>v</code></div></details></div></details>","VisitWith<V>","swc_core::base::atoms::StaticString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitWith%3CV%3E-for-Atom\" class=\"impl\"><a href=\"#impl-VisitWith%3CV%3E-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; VisitWith&lt;V&gt; for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a><div class=\"where\">where\n    V: Visit + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with\" class=\"method trait-impl\"><a href=\"#method.visit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_with</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Calls a visitor method (v.visit_xxx) with self.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_children_with\" class=\"method trait-impl\"><a href=\"#method.visit_children_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit_children_with</a>(&amp;self, _visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)</h4></section></summary><div class='docblock'>Visit children nodes of self with <code>v</code></div></details></div></details>","VisitWith<V>","swc_core::base::atoms::StaticString"],["<section id=\"impl-Eq-for-Atom\" class=\"impl\"><a href=\"#impl-Eq-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section>","Eq","swc_core::base::atoms::StaticString"],["<section id=\"impl-StructuralPartialEq-for-Atom\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Atom\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"swc_core/base/atoms/struct.JsWord.html\" title=\"struct swc_core::base::atoms::JsWord\">Atom</a></h3></section>","StructuralPartialEq","swc_core::base::atoms::StaticString"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()